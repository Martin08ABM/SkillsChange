---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import NavBar from '../components/NavBar.astro';
---

<Layout title="Debug - Crear Servicio">
  <Header showPostButton={false} />
  <NavBar />

  <div class="container mx-auto px-4 py-8">
    <div class="max-w-2xl mx-auto">
      <h1 class="text-3xl font-bold mb-6">Debug - Crear Servicio</h1>
      
      <div class="bg-yellow-100 border border-yellow-400 p-4 rounded mb-6">
        <p class="text-yellow-800">
          <strong>Modo Debug:</strong> Esta página está diseñada para diagnosticar problemas 
          con la creación de servicios. Revisa la consola del navegador para ver los logs.
        </p>
      </div>

      <form id="debug-form" class="space-y-4">
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Título</label>
          <input 
            type="text" 
            name="title" 
            value="Servicio de prueba" 
            class="w-full p-2 border border-gray-300 rounded"
            required
          >
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Descripción</label>
          <textarea 
            name="description" 
            class="w-full p-2 border border-gray-300 rounded h-24"
            required
          >Este es un servicio de prueba para verificar la funcionalidad</textarea>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Precio</label>
          <input 
            type="number" 
            name="price" 
            value="25.00" 
            step="0.01" 
            class="w-full p-2 border border-gray-300 rounded"
          >
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Tipo de servicio</label>
          <div class="flex gap-4">
            <label class="flex items-center">
              <input type="checkbox" name="is_physical" value="true" checked>
              <span class="ml-2">Físico</span>
            </label>
            <label class="flex items-center">
              <input type="checkbox" name="is_online" value="true">
              <span class="ml-2">Online</span>
            </label>
          </div>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Tipo de pago</label>
          <div class="flex gap-4">
            <label class="flex items-center">
              <input type="radio" name="payment_type" value="paid" checked>
              <span class="ml-2">Pago</span>
            </label>
            <label class="flex items-center">
              <input type="radio" name="payment_type" value="barter">
              <span class="ml-2">Intercambio</span>
            </label>
          </div>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Método de pago preferido</label>
          <div class="flex gap-4">
            <label class="flex items-center">
              <input type="radio" name="preferred_payment_method" value="stripe" checked>
              <span class="ml-2">Stripe</span>
            </label>
            <label class="flex items-center">
              <input type="radio" name="preferred_payment_method" value="paypal">
              <span class="ml-2">PayPal</span>
            </label>
          </div>
        </div>

        <div class="flex gap-4">
          <button 
            type="submit" 
            class="bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600"
          >
            Crear con Debug
          </button>
          
          <button 
            type="button" 
            id="test-connection"
            class="bg-green-500 text-white px-6 py-2 rounded hover:bg-green-600"
          >
            Probar Conexión
          </button>
        </div>
      </form>

      <div id="result" class="mt-6 p-4 bg-gray-100 rounded hidden">
        <h3 class="font-bold mb-2">Resultado:</h3>
        <pre id="result-content" class="text-sm overflow-auto"></pre>
      </div>
    </div>
  </div>

  <Footer />
</Layout>

<script>
  const form = document.getElementById('debug-form');
  const resultDiv = document.getElementById('result');
  const resultContent = document.getElementById('result-content');
  const testConnectionBtn = document.getElementById('test-connection');

  function showResult(data) {
    resultContent.textContent = JSON.stringify(data, null, 2);
    resultDiv.classList.remove('hidden');
    console.log('Result:', data);
  }

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    
    // Ajustar checkboxes
    formData.set('is_physical', document.querySelector('input[name="is_physical"]:checked') ? 'true' : 'false');
    formData.set('is_online', document.querySelector('input[name="is_online"]:checked') ? 'true' : 'false');
    
    console.log('Sending data:', Object.fromEntries(formData));
    
    try {
      const response = await fetch('/api/services/create-debug', {
        method: 'POST',
        body: formData
      });
      
      const result = await response.json();
      showResult(result);
      
    } catch (error) {
      console.error('Error:', error);
      showResult({ error: 'Network error', details: error.message });
    }
  });

  testConnectionBtn.addEventListener('click', async () => {
    try {
      const response = await fetch('/api/test-connection');
      const result = await response.json();
      showResult(result);
    } catch (error) {
      console.error('Error:', error);
      showResult({ error: 'Connection test failed', details: error.message });
    }
  });
</script>
